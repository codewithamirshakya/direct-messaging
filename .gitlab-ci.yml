stages:
  - install-dependencies
  - build
  - deploy

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

.preparation: &preparation-definition
  stage: install-dependencies
  image: node:16-stretch
  script:
    - npm install
  tags:
    - ptvdm-node
  artifacts:
    paths:
      - node_modules
    expire_in: 1 days
    when: always
  cache:
    paths:
      - node_modules

.deploy: &deploy-definition
  stage: deploy
  dependencies:
    - install-dependencies
  tags:
    - ${RUNNER_TAG}
  environment:
    name: ${CI_COMMIT_BRANCH}
    url: ${PROJECT_URL}
  script:
      - |
          if [[ "$CI_COMMIT_BRANCH" != "master" ]];then
            docker-compose -f ${COMPOSE_FILE} down && docker-compose -f ${COMPOSE_FILE} up -d
          fi

.build-and-push-template: &build-and-push-definition
    stage: build
    image: docker:17
    before_script:
      - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
    script:
      - docker build -t $IMAGE_NAME .
      - docker push $IMAGE_NAME
    after_script:
      - docker image rm -f $IMAGE_NAME   
    tags:
      - ptv-docker

install-dependencies:
  <<: *preparation-definition
  only:
      refs: ['develop','staging','master','prerelease']

buildimage:
  <<: *build-and-push-definition
  dependencies:
    - install-dependencies
  only:
      refs: ['master','prerelease']

deploy:
   <<: *deploy-definition
   variables:
     RUNNER_TAG: ptvdm-deploy
     COMPOSE_FILE: docker-compose.dev.yml
     PROJECT_URL: $DEV_URL
   only:
    refs: ["develop"]
   
deploy-stage:
   <<: *deploy-definition
   variables:
     RUNNER_TAG: ptvdm-deploy
     COMPOSE_FILE: docker-compose.stg.yml
     PROJECT_URL: $STAGE_URL

   only:
    refs: ["staging"]
   
